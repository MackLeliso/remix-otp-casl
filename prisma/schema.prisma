// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "fullTextSearch"]

}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  first_name String
  last_name String
  phone String @unique
  delete Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

   // user relation
  posts Post[]
  products Product[]
  roleId String
  role Role @relation(fields: [roleId], references: [id])
}
model Role {
  id String @id @default(uuid())
  name String @unique
  description String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // role relation
  user User[]
  permission RolePermission[]
}
model Permission {
  id String @id @default(uuid())
  name String @unique
  description String?
  action String
  subject String
  conditions Json?
  fields String[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // permission relation
  role RolePermission[]
}

model RolePermission {
  role Role @relation(fields: [roleId], references: [id])
  roleId String
  permission Permission @relation(fields: [permissionId], references: [id])
  permissionId String

  @@id([roleId, permissionId])
}
model Post {
  id       String  @id @default(uuid())
  title    String
  content  String?
  authorId String
  author   User    @relation(fields: [authorId], references: [id])
  comments Comment[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id String @id @default(uuid())
  content String
  postId String
  post Post @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Otp {
  id String @id @default(uuid())
  otpNumber String @unique
  phone String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
model ProductCategory {
  id String @id @default(uuid())
  name String @unique
  description String?
  delete Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // productCategory relation
  products Product[]
  
}
model Product {
  id String @id @default(uuid())
  name String
  description String?
  delete Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // product relation
  userId String
  user User @relation(fields: [userId], references: [id])
  categoryId String
  category ProductCategory @relation(fields: [categoryId], references: [id])
}
